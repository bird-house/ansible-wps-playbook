---
# Variables listed here are applicable to all host groups
prefix: /usr/local
src_dir: "{{ prefix }}/src"
server_name: localhost
service_add_user: true
service_user: wps
# service_uid: 500
service_group: "{{ service_user }}"
service_groups: "{{ service_group }}"
# service_gid: 100
service_user_home: /var/lib/pywps
cron_script_dir: "{{ service_user_home }}"


# logrotation
logrotate_use_hourly_rotation: false
logrotate_applications:
  - name: pywps
    definitions:
      - logs:
          - /var/log/pywps/*.log
        options:
          - rotate 7
          - daily
          - dateext
          - copytruncate
          - missingok
          - notifempty
          - sharedscripts

# postgres
db_install_postgresql: true
db_install_sqlite: false
db_host: localhost
db_port: 5432
db_user: pywps
db_password: pywps

# nginx fileserver
fs_enabled: false
fs_host: localhost
fs_port: 6000

# slurm/drmaa
# https://github.com/galaxyproject/ansible-slurm
slurm_enabled: false
slurm_drmaa_version: 1.1.4
slurm_roles: ['controller', 'exec']
slurm_munge_key: /etc/munge/munge.key

# miniconda
miniconda_parent_dir: "{{ prefix }}"
miniconda_make_sys_default: False

# conda
conda_location: "{{ prefix }}/anaconda"
conda_bin: "{{ conda_location }}/bin/conda"
conda_envs_dir: "{{ conda_location }}/envs"
conda_env_file: environment.yml
conda_env_use_spec: false
conda_env_spec_file: spec-list.txt

# supervisor
# https://github.com/geerlingguy/ansible-role-supervisor
supervisor_user: root
supervisor_password: 'test'
supervisor_unix_http_server_password_protect: false
supervisor_inet_http_server_password_protect: false
supervisor_unix_http_server_enable: true
supervisor_inet_http_server_enable: false
supervisor_inet_http_server_port: '*:9001'

# nginx
nginx_user: "{{ service_user }} {{ service_group }}"
nginx_remove_default_vhost: true
nginx_extra_http_options: |
  types {
    application/x-netcdf    nc;
    application/ncML+xml    ncml;
  }
nginx_keepalive_timeout: "60"
nginx_keepalive_requests: "100"
nginx_proxy_timeout: "60s"

# gunicorn
# https://docs.gunicorn.org/en/stable/settings.html
gunicorn_workers: 5  # rule of thumb: 2 * CPUs + 1
gunicorn_worker_class: 'sync'  # or "gevent", needs gevent
gunicorn_timeout: 30

# postgres
# https://github.com/geerlingguy/ansible-role-postgresql
postgresql_restarted_state: "restarted"
postgresql_service_state: "started"
postgresql_service_enabled: true
postgresql_locales:
  - 'en_US.utf8'
postgresql_databases:
  - name:  "pywps"
    port: "{{ db_port }}"
postgresql_users:
  - name: "{{ db_user }}"
    password: "{{ db_password }}"
    encrypted: yes  # encryption necessary for postgres>=10.0.
# postgresql_hba_entries: []

# ssl-certs
# https://github.com/jdauphant/ansible-role-ssl-certs/blob/master/defaults/main.yml
ssl_certs_path_owner: "{{ service_user }}"
ssl_certs_path_group: "{{ service_group }}"

# cron
cron_enabled: false
cron_disabled: "{{ cron_enabled | bool == false }}"
cron_mailto: root
cron_user: root


# roocs
roocs_enabled: false
roocs_site: demo
roocs_demo_data_dir: /data
roocs_cache_dir: "/tmp/inventory_cache"

# flamingo
flamingo_enabled: false

# pywps
wps_user: "{{ service_user }}"
wps_group: "{{ service_group }}"
wps_enable_https: false
wps_enable_acl: false
wps_acl_allow: []
wps_run_dir: /run/pywps
wps_database: "postgresql+psycopg2://{{ db_user }}:{{ db_password }}@{{ db_host }}:{{ db_port }}/pywps"
wps_webservice_enabled: true
wps_basedir: "{{ service_user_home }}"
wps_cache_dir: "{{ wps_basedir }}/cache"
wps_log_dir: /var/log/pywps
wps_http_log_dir: /var/log/nginx
wps_outputs_keep_days: 30
wps_temp_keep_days: 30
wps_services: []
  # - name: emu
  #   repo: https://github.com/bird-house/emu.git
  #   version: master
  #   hostname: "{{ server_name }}"
  #   output_hostname: "{{ server_name }}"
  #   port: 5000
  #   maxsingleinputsize: 200mb
  #   maxrequestsize: 200mb
  #   maxprocesses: 30
  #   parallelprocesses: 4
  #   mode: default
  #   drmaa_native_specification: ""
  #   log_level: INFO
  #   cleantempdir: true
  #   storage_copy_function: copy
  #   database: "{{ wps_database }}"
  #   # outputurl: http://somewhere.earth/outputs # optional
  #   extra_config: |
  #     [data]
  #     cache_path = /tmp
