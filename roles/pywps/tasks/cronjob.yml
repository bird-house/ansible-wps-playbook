---
- name: Clean up cron files managed by ansible
  file:
    path: "/etc/cron.d/{{ item }}"
    state: absent
  with_items:
    - ansible_pywps

- name: Add MAILTO to cron file
  community.general.cronvar:
    name: MAILTO
    value: "{{ cron_mailto }}"
    cron_file: ansible_pywps

- name: Clear wps outputs
  cron:
    name: "clear wps outputs"
    special_time: daily
    user: "{{ service_user }}"
    job: 'find {{ wps_basedir }}/outputs/* -maxdepth 1 -type d -mtime +{{ wps_outputs_keep_days }} -regextype sed -regex ".*/[a-f0-9\-]\{36\}$" -exec rm -rf {} \;'
    cron_file: ansible_pywps
    disabled: "{{ cron_disabled }}"
    state: present

- name: Clear wps status
  cron:
    name: "clear wps status"
    special_time: daily
    user: "{{ service_user }}"
    job: 'find {{ wps_basedir }}/outputs/* -maxdepth 1 -type f -mtime +{{ wps_outputs_keep_days }} -regextype sed -regex ".*/[a-f0-9\-]\{36\}\.xml$" -delete'
    cron_file: ansible_pywps
    disabled: "{{ cron_disabled }}"
    state: present

- name: Clear wps tempfiles
  cron:
    name: "clear wps tempfiles"
    special_time: daily
    user: "{{ service_user }}"
    job: 'find {{ wps_basedir }}/tmp/* -maxdepth 1 -type d -mtime +{{ wps_temp_keep_days }} -name "pywps_process_*" -exec rm -rf {} \;'
    cron_file: ansible_pywps
    disabled: "{{ cron_disabled }}"
    state: present

- name: Copy restart script
  template:
    src: ./templates/restart-pywps.sh.j2
    dest: "{{ service_user_home }}/restart-pywps.sh"
    # owner: "{{ service_user }}"
    owner: root
    mode: 0744

- name: Restart pywps service and clean out old gunicorn processes every night
  cron:
    name: "restart pywps"
    # weekday: "0"
    minute: "0"
    hour: "3"
    # user: "{{ service_user }}"
    user: root
    job: "{{ service_user_home }}/restart-pywps.sh {{ item.name }} 2>&1 > /var/log/pywps/restart-{{ item.name }}.log"
    cron_file: ansible_pywps
    disabled: "{{ cron_disabled }}"
    state: present
  with_items:
    - "{{ wps_services }}"
